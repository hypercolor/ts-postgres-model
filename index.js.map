{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/Column.ts","webpack:///./src/PostgresModel.ts","webpack:///./src/Scope.ts","webpack:///external \"bluebird\"","webpack:///external \"bookshelf\"","webpack:///external \"pluralize\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport { PostgresModel } from './src/PostgresModel'\nexport {IScopeFactory} from './src/IScopeFactory'\nexport {IUser} from './src/IUser'\nexport {Scope, IKnexObject, ScopeAction} from './src/Scope'\nexport {Column} from './src/Column'\n","export function Column(target: any, key: string) {\n\n  // property getter\n  const getter = function(this: any) {\n    console.log(`Get: ${key} => ${target.get(key)}`);\n    return this.get(key);\n  };\n\n  // property setter\n  const setter = function(this: any, newVal: any) {\n    console.log(`Set: ${key} => ${newVal}`);\n    this.set(key, newVal);\n  };\n\n  // Delete property.\n  if (delete target[key]) {\n\n    // Create new property with getter and setter\n    Object.defineProperty(target, key, {\n      get: getter,\n      set: setter,\n      enumerable: true,\n      configurable: true\n    });\n  } else {\n    console.log('Warning, couldnt delete property: ' + key);\n  }\n}\n","\n\n// import * as Bookshelf from 'bookshelf';\n// import * as Knex from 'knex';\n\nimport * as Bookshelf from 'bookshelf';\n\n// const bookshelf = Bookshelf(Knex({}));\n\nimport * as BlueBird from 'bluebird';\nimport {Collection, DestroyOptions, FetchAllOptions, FetchOptions, Model, SaveOptions} from 'bookshelf';\n\nimport * as Pluralize from 'pluralize';\n// import {Postgres} from '../../src/interfaces/postgres';\nimport { IScopeFactory } from './IScopeFactory';\nimport { IUser } from './IUser';\nimport { Scope, ScopeAction } from './Scope';\n\n// import {Postgres} from '../../interfaces/postgres';\n// import {\n//   IFetchPageOptions, PaginatedBookshelf, PaginatedCollection,\n//   PaginatedModel\n// } from '../../../types/bookshelf-pagination/index';\n// import {PaginatedBookshelf} from 'bookshelf-pagination';\n\n// import {Scope, ScopeAction} from '../../util/access-control/scope';\n// import {ScopeFactory} from '../../util/access-control/scope-factory';\n// import {IAuthRequest} from '../../util/auth';\n\n// import {AccessControl} from \"../../util/access_control\";\n\nexport interface IPostgresModelClass<T extends PostgresModel<T>> {\n  instanceName: string;\n  pluralInstanceName: string;\n  relationships: object;\n  new(params?: any): T;\n}\n\nexport interface IPaginationMetadata {\n  rowCount: number, // Total number of rows found for the query before pagination\n  pageCount: number, // Total number of pages of results\n  page: number, // The requested page number\n  pageSze: number, // The requested number of rows per page\n}\n\nexport interface IFetchPageOptions {\n  pageSize: number,\n  page: number,\n  withRelated?: Array<string>\n}\n\nexport interface IPaginatedCollection<T extends Model<any>> extends Collection<T> {\n  pagination: IPaginationMetadata;\n}\n\n// declare namespace PaginatedBookshelf {\n//\n//\n//\n//\n//\n//   export class PaginatedModel<T extends Model<any>> extends Model<T> {\n//\n//     public fetchPage(options?: IFetchPageOptions): Bluebird<PaginatedCollection<T>>;\n//\n//   }\n//\n// }\n\nexport class PostgresModelScopeFactory {\n  public static scopeFactory: IScopeFactory;\n}\n\n\nexport abstract class PostgresModel<T extends Bookshelf.Model<T>> extends Bookshelf.Model<T> {\n\n  // ==============================\n  //  Model Configuration\n  // ==============================\n\n  // note: tableName must be implemented as a getter fcn not a property on the concrete classes for eager loading to work\n  abstract get tableName(): string;\n  // abstract get defaultReadAcl(): string;\n  // abstract get defaultWriteAcl(): string;\n\n  // abstract get columns(): object;\n  get readOnlyColumns(): Array<string> {\n    return [];\n  }\n\n\n  public abstract defaultReadAclScope: Scope;\n  public abstract defaultWriteAclScope: Scope;\n\n\n  static get instanceName(): string {\n    return this.name.charAt(0).toLowerCase() + this.name.slice(1);\n  }\n\n  static get pluralInstanceName(): string {\n    return Pluralize(this.instanceName);\n  }\n\n  get hasTimestamps(): boolean { return true; }\n\n  // ==============================\n  //  Constructor\n  // ==============================\n  // ==============================\n  //  Relationships\n  // ==============================\n  // ==============================\n  //  Eager loading accessors\n  // ==============================\n  // ==============================\n  //  Column getter/setters\n  // ==============================\n\n  // get createdAt(): Date { return this.get('created_at'); }\n  // get updatedAt(): Date { return this.get('updated_at'); }\n  //\n  get readAcl(): string | null { return this.get('readAcl'); }\n  set readAcl(value: string | null) { this.set('readAcl', value); }\n\n  get writeAcl(): string | null { return this.get('writeAcl'); }\n  set writeAcl(value: string | null) { this.set('writeAcl', value); }\n  //\n  // get deleted(): boolean { return this.get('deleted') || false; }\n  // set deleted(value: boolean) { this.set('deleted',value); }\n  //\n  // get userId(): number | null { return this.get('userId'); }\n  // set userId(value: number | null) { this.set('userId',value); }\n  //\n  // get companyId(): number | null { return this.get('companyId'); }\n  // set companyId(value: number | null) { this.set('companyId',value); }\n\n  // ==============================\n  //  Business Logic\n  // ==============================\n\n  public willBeUpdated(newParams: any): Promise<any> {\n    return Promise.resolve(newParams);\n  }\n\n  public updateWithParams(params: any, user: IUser, options?: SaveOptions): Promise<T> {\n    const restrictedKeys = [\n      'id',\n      'readAcl',\n      'writeAcl'\n    ].concat(this.readOnlyColumns);\n    return this.willBeUpdated(params)\n    .then(updatedParams => {\n      Object.keys(updatedParams).forEach(key => {\n        if (restrictedKeys.indexOf(key) === -1) {\n          this.set(key, updatedParams[key]);\n        }\n      });\n      return this.saveForUser(user, options);\n    });\n  }\n\n  // ==============================\n  //  Access Control\n  // ==============================\n\n\n  public get readAclScope(): Scope {\n    if (this.readAcl){\n      return PostgresModelScopeFactory.scopeFactory.scopeForAcl(this.readAcl, ScopeAction.Read);\n    } else {\n      return this.defaultReadAclScope;\n    }\n  }\n\n  public get writeAclScope(): Scope {\n    if (this.writeAcl){\n      return PostgresModelScopeFactory.scopeFactory.scopeForAcl(this.writeAcl, ScopeAction.Write);\n    } else {\n      return this.defaultWriteAclScope;\n    }\n  }\n\n  public save(attrs?: { [key: string]: any }, options?: SaveOptions): BlueBird<T>;\n  public save(key?: string, val?: any, options?: SaveOptions): BlueBird<T>;\n  public save(){\n    return BlueBird.reject({code: 500, error: 'Must use saveForUser.'});\n  }\n\n  public saveForUser(user: IUser, options?: SaveOptions): Promise<T> {\n\n    return new Promise<boolean>((resolve,reject) => {\n      if (this.id === undefined) {\n        // If no id, it must be a new object so we'll just let the save through\n        resolve(true);\n      } else {\n        this.writeAclScope.testAccess(user, this).then(resolve).catch(reject);\n        // AccessControl.verifyRequestHasPermissionToWriteObject(req,this).then(resolve).catch(reject);\n      }\n    })\n    .then((allowed) => {\n      if (allowed) {\n        // return Promise.resolve(this);\n        return super.save(undefined, options)\n        .then(result => {\n          return Promise.resolve(result);\n        });\n      } else {\n        // const companyIds = user !== undefined ? user.getVisibleCompanyIds() : [];\n        // console.log('Failed auth test for object: ' + JSON.stringify(this) + ' for user: ' + JSON.stringify(user) + ' with companies: ' + JSON.stringify(companyIds));\n        return Promise.reject({code: 403, error: 'User not authorized for that action.'});\n        // return Promise.reject(new Error(''));\n      }\n    });\n  }\n\n  public saveIgnoringWriteAcl(key?: string, val?: any, options?: SaveOptions): Promise<T> {\n    return Promise.resolve().then(() => {\n      return super.save(key, val, options);\n    });\n  }\n\n  public destroy(options?: DestroyOptions): BlueBird<T> {\n    return BlueBird.reject({code: 500, error: 'Must use destroyForUser.'});\n  }\n\n  public destroyForUser(user: IUser, options?: DestroyOptions): Promise<any> {\n\n    return this.writeAclScope.testAccess(user, this)\n    // return AccessControl.verifyRequestHasPermissionToWriteObject(req,this)\n    .then((allowed) => {\n      if (allowed) {\n        return super.destroy(options);\n      } else {\n        return Promise.reject({code: 403, error: 'User not authorized for that action.'});\n      }\n    });\n  }\n\n  public fetch(fetchOptions?: FetchOptions){\n    return BlueBird.reject({code: 500, error: new Error('Must use fetchForUser.')});\n  }\n\n  public fetchForUser(user: IUser, fetchOptions?: any): Promise<T> {\n\n    let result: T;\n    return Promise.resolve().then(() => {\n      return super.fetch(fetchOptions);\n    })\n    .then(r => {\n      result = r as any;\n      if (result){\n        return this.readAclScope.testAccess(user, result as any);\n      } else {\n        return Promise.resolve(true);\n      }\n      // return AccessControl.testObjectReadAuthorizationForRequest(result,req);\n    })\n    .then((authorized) => {\n      if (authorized) {\n        return Promise.resolve(result);\n      } else {\n        console.log('Unauthorized for read access to object: ' + JSON.stringify(result));\n        console.log('');\n        console.log(' for user: ' + JSON.stringify(user));\n        return Promise.reject({code: 403, error: 'Unauthorized.'});\n      }\n    });\n  }\n\n  public fetchIgnoringReadAcl(fetchOptions?: any): Promise<T> {\n    return Promise.resolve().then(() => {\n      return super.fetch(fetchOptions);\n    });\n  }\n\n  // public fetchAll(fetchOptions?: FetchAllOptions){\n  //   const unlock = fetchOptions ? (fetchOptions as any).unlock : null;\n  //   if (unlock){\n  //     return super.fetchAll(fetchOptions);\n  //   } else {\n  //     return BlueBird.reject({code: 500, error: new Error('Must use fetchAllForUser.')});\n  //   }\n  // }\n\n  public fetchAllForUser(user: IUser, fetchOptions?: FetchAllOptions): Promise<Collection<T>> {\n\n    return this.readAclScope.updateQueryReadAcl(user, this)\n    .then(() => {\n      return super.fetchAll(fetchOptions);\n    });\n  }\n\n  public fetchPageForUser(user: IUser, options?: IFetchPageOptions): Promise<IPaginatedCollection<T>> {\n    return this.readAclScope.updateQueryReadAcl(user, this)\n    .then(() => {\n      return (this as any).fetchPage(options);\n    });\n  }\n\n  public fetchAllIgnoringReadAcl(fetchOptions?: FetchAllOptions): Promise<Collection<T>> {\n    return Promise.resolve().then(() => {\n      return super.fetchAll(fetchOptions);\n    });\n  }\n\n\n}\n\n","\nimport { IUser } from \"./IUser\";\nimport { PostgresModel } from \"./PostgresModel\";\n\n// TODO: Refactor this interface to allow each concrete class to provide their own assumptions about keys on the model\n// export interface IScopeableObject {\n//   readAcl: string | null;\n//   writeAcl: string | null;\n//   id: number;\n//   tableName: string;\n// }\n\nexport enum ScopeAction {\n  Read, Write\n}\n\nexport interface IKnexObject {\n  _knex: any;\n}\n\nexport abstract class Scope {\n\n  public abstract get aclString(): string;\n\n  public abstract testAccess(user: IUser, object: any): Promise<boolean>;\n\n  public updateQueryReadAcl(user: IUser, object: PostgresModel<any>) {\n    const knexableObject = object as any;\n    if (knexableObject._knex === undefined){\n      return Promise.reject({code: 500, error: 'No _knex found on object: ' + JSON.stringify(knexableObject)});\n    }\n    if (user && user.isAdmin()) {\n      return Promise.resolve();\n    } else {\n      return this.updateKnexQuery(user, knexableObject);\n    }\n  }\n\n\n  protected abstract updateKnexQuery(user: IUser, object: IKnexObject): Promise<any>;\n\n}\n","module.exports = require(\"bluebird\");","module.exports = require(\"bookshelf\");","module.exports = require(\"pluralize\");"],"sourceRoot":""}