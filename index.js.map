{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/PostgresModel.ts","webpack:///./src/PublicScope.ts","webpack:///./src/Schemas.ts","webpack:///./src/Scope.ts","webpack:///external \"bookshelf\"","webpack:///external \"knex\"","webpack:///external \"pluralize\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEmD;AAGQ;AACtB;AACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNjB;AAEU;AAEtC,IAAM,UAAU,GAAG;IACjB,MAAM,EAAE,YAAY;IACpB,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;IACpC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,MAAM;CACzC;AAEM,IAAM,SAAS,GAAG,sCAAS,CAAC,iCAAI,CAAC,UAAU,CAAC,CAAC;AACpD,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;AAIQ;AAGM;AACA;AA0B5C;IAAA;IAEA,CAAC;IAAD,gCAAC;AAAD,CAAC;;AAED;IAAgE,iCAAkB;IAAlF;QACE,iCAAiC;QACjC,uBAAuB;QACvB,iCAAiC;QAHnC,qEA6QC;QAhQQ,yBAAmB,GAAU,IAAI,wDAAW,EAAE;QAC9C,0BAAoB,GAAU,IAAI,wDAAW,EAAE;;IA+PxD,CAAC;IApQC,sBAAI,0CAAe;aAAnB;YACE,MAAM,CAAC,EAAE;QACX,CAAC;;;OAAA;IAKD,sBAAW,6BAAY;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAED,sBAAW,mCAAkB;aAA7B;YACE,MAAM,CAAC,sCAAS,CAAC,IAAI,CAAC,YAAY,CAAC;QACrC,CAAC;;;OAAA;IAED,sBAAI,wCAAa;aAAjB;YACE,MAAM,CAAC,IAAI;QACb,CAAC;;;OAAA;IAeD,sBAAI,oCAAS;QAbb,iCAAiC;QACjC,eAAe;QACf,iCAAiC;QACjC,iCAAiC;QACjC,iBAAiB;QACjB,iCAAiC;QACjC,iCAAiC;QACjC,2BAA2B;QAC3B,iCAAiC;QACjC,iCAAiC;QACjC,yBAAyB;QACzB,iCAAiC;aAEjC;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;QAC/B,CAAC;;;OAAA;IACD,sBAAI,oCAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,kCAAO;QADX,EAAE;aACF;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;QAC5B,CAAC;aACD,UAAY,KAAoB;YAC9B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;QAC5B,CAAC;;;OAHA;IAKD,sBAAI,mCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;QAC7B,CAAC;aACD,UAAa,KAAoB;YAC/B,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;QAC7B,CAAC;;;OAHA;IAKD,sBAAI,kCAAO;QADX,EAAE;aACF;YACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK;QACrC,CAAC;aACD,UAAY,KAAc;YACxB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;QAC5B,CAAC;;;OAHA;IAKD,iCAAiC;IACjC,kBAAkB;IAClB,iCAAiC;IAE1B,qCAAa,GAApB,UAAqB,SAAc;QACjC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;IACnC,CAAC;IAEM,wCAAgB,GAAvB,UAAwB,MAAW,EAAE,OAAqB;QAA1D,iBAUC;QATC,IAAM,cAAc,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,uBAAa;YAClD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,aAAG;gBACpC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1F,KAAI,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC;YACF,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAEM,+CAAuB,GAA9B,UAA+B,MAAW,EAAE,IAAW,EAAE,OAAqB;QAA9E,iBAUC;QATC,IAAM,cAAc,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QACjF,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,uBAAa;YAClD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,aAAG;gBACpC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1F,KAAI,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC;YACF,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAMD,sBAAW,uCAAY;QAJvB,iCAAiC;QACjC,kBAAkB;QAClB,iCAAiC;aAEjC;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,yBAAyB,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,kDAAW,CAAC,IAAI,CAAC;YAC3F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,mBAAmB;YACjC,CAAC;QACH,CAAC;;;OAAA;IAED,sBAAW,wCAAa;aAAxB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC,yBAAyB,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,kDAAW,CAAC,KAAK,CAAC;YAC7F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,oBAAoB;YAClC,CAAC;QACH,CAAC;;;OAAA;IAED,kFAAkF;IAClF,2EAA2E;IAC3E,kBAAkB;IAClB,0EAA0E;IAC1E,IAAI;IAEG,mCAAW,GAAlB,UAAmB,IAAW,EAAE,OAAqB;QAArD,iBAsBC;QArBC,MAAM,CAAC,IAAI,OAAO,CAAU,UAAC,OAAO,EAAE,MAAM;YAC1C,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1B,uEAAuE;gBACvE,OAAO,CAAC,IAAI,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,KAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;gBACrE,+FAA+F;YACjG,CAAC;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAO;YACb,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,gCAAgC;gBAChC,MAAM,CAAC,iBAAM,IAAI,aAAC,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAM;oBAC/C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;gBAChC,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,4EAA4E;gBAC5E,iKAAiK;gBACjK,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,sCAAsC,EAAE,CAAC;gBACnF,wCAAwC;YAC1C,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,4FAA4F;IAC5F,0CAA0C;IAC1C,2CAA2C;IAC3C,OAAO;IACP,IAAI;IAEJ,0DAA0D;IAC1D,6EAA6E;IAC7E,IAAI;IAEG,sCAAc,GAArB,UAAsB,IAAW,EAAE,OAAwB;QAA3D,iBAaC;QAZC,MAAM,CAAC,CACL,IAAI,CAAC,aAAa;aACf,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC;aAEtB,IAAI,CAAC,iBAAO;YACX,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,iBAAM,OAAO,aAAC,OAAO,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,sCAAsC,EAAE,CAAC;YACrF,CAAC;QACH,CAAC,CAAC,CACL;IACH,CAAC;IAED,2EAA2E;IAC3E,0CAA0C;IAC1C,oCAAoC;IACpC,OAAO;IACP,IAAI;IACJ,EAAE;IACF,8CAA8C;IAC9C,sFAAsF;IACtF,IAAI;IAEG,oCAAY,GAAnB,UAAoB,IAAW,EAAE,YAAkB;QAAnD,iBAyBC;QAxBC,IAAI,MAAS;QACb,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;aACrB,IAAI,CAAC;YACJ,MAAM,CAAC,iBAAM,KAAK,aAAC,YAAY,CAAC;QAClC,CAAC,CAAC;aACD,IAAI,CAAC,WAAC;YACL,MAAM,GAAG,CAAQ;YACjB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,EAAE,MAAa,CAAC;YAC1D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;YAC9B,CAAC;YACD,0EAA0E;QAC5E,CAAC,CAAC;aACD,IAAI,CAAC,oBAAU;YACd,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;YAChC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,0CAA0C,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAChF,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACjD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC;IACN,CAAC;IAED,gEAAgE;IAChE,0CAA0C;IAC1C,uCAAuC;IACvC,OAAO;IACP,IAAI;IAEJ,mDAAmD;IACnD,uEAAuE;IACvE,iBAAiB;IACjB,2CAA2C;IAC3C,aAAa;IACb,0FAA0F;IAC1F,MAAM;IACN,IAAI;IAEG,uCAAe,GAAtB,UAAuB,IAAW,EAAE,YAA8B;QAAlE,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;YAC3D,MAAM,CAAC,iBAAM,QAAQ,aAAC,YAAY,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IAEM,wCAAgB,GAAvB,UAAwB,IAAW,EAAE,OAA2B;QAAhE,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;YAC3D,MAAM,CAAE,KAAY,CAAC,SAAS,CAAC,OAAO,CAAC;QACzC,CAAC,CAAC;IACJ,CAAC;IAED,2FAA2F;IAC3F,0CAA0C;IAC1C,0CAA0C;IAC1C,OAAO;IACP,IAAI;IAEJ,iCAAiC;IACjC,gBAAgB;IAChB,iCAAiC;IAE1B,gCAAQ,GAAf,UAAgB,aAA4B;QAA5C,iBAkBC;QAjBC,aAAa,GAAG,aAAa,IAAI,EAAE;QACnC,EAAE,CAAC,CAAC,aAAa,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,sCAAsC,EAAE,CAAC;QACrF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBAC5B,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC;YACjC,CAAC,CAAC;YACF,2BAA2B;YAC3B,gBAAgB;YAChB,8BAA8B;YAC9B,+BAA+B;YAC/B,4CAA4C;YAC5C,KAAK;YACL,oBAAoB;YACpB,oCAAoC;YACpC,MAAM;QACR,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,CA7Q+D,SAAS,CAAC,KAAK,GA6Q9E;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5T4C;AAG7C;IAAiC,+BAAK;IAAtC;QAAA,qEAaC;QAXQ,eAAS,GAAG,QAAQ,CAAC;;IAW9B,CAAC;IATQ,gCAAU,GAAjB,UAAkB,IAAW,EAAE,MAAW;QACxC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAGM,qCAAe,GAAtB,UAAuB,IAAW,EAAE,MAAmB;QACrD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAEH,kBAAC;AAAD,CAAC,CAbgC,4CAAK,GAarC;;;;;;;;;;;;;;;;;;AChBD,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC1B,mCAAe;IACf,+CAA2B;AAC7B,CAAC,EAHW,gBAAgB,GAAhB,gBAAgB,KAAhB,gBAAgB,QAG3B;AAED;IAAA;IAyDA,CAAC;IArDe,2CAAmC,GAAjD,UAAkD,IAAU;QAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IACrC,CAAC;IAEa,yCAAiC,GAA/C,UAAgD,IAAU;QACxD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACpC,CAAC;IAEa,gDAAwC,GAAtD,UAAuD,IAAU,EAAE,SAAiB;QAClF,MAAM,CAAC,IAAI,CAAC,GAAG,CACb,wBAAwB;YACtB,SAAS;YACT,+BAA+B;YAC/B,SAAS;YACT,6DAA6D,CAChE;IACH,CAAC;IAEa,wBAAgB,GAA9B,UAA+B,IAAU,EAAE,KAAa,EAAE,MAAc,EAAE,OAAyB;QACjG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,KAAK,GAAG,kBAAkB,GAAG,MAAM,GAAG,SAAS,GAAG,OAAO,GAAG,EAAE,CAAC;IACnG,CAAC;IAEa,wBAAgB,GAA9B,UAA+B,IAAU,EAAE,SAAiB;QAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,SAAS,GAAG,UAAU,CAAC;IACzD,CAAC;IAED,qFAAqF;IACrF,EAAE;IACF,6BAA6B;IAC7B,aAAa;IACb,sCAAsC;IACtC,oDAAoD;IACpD,aAAa;IACb,sCAAsC;IACtC,kDAAkD;IAClD,sCAAsC;IACtC,sCAAsC;IACtC,+BAA+B;IAC/B,aAAa;IACb,gBAAgB;IAChB,EAAE;IACF,IAAI;IAEU,2BAAmB,GAAjC,UAAkC,IAAU,EAAE,SAAiB,EAAE,OAAuC;QACtG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,WAAC;YACzC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;YAC5B,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC;YAEzB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC;YAEnD,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC;IACJ,CAAC;IAvDc,qBAAa,GAAG,mQAAmQ;IACnR,oBAAY,GAAG,2CAA2C;IAuD3E,cAAC;CAAA;AAzDmB;;;;;;;;;;;;;;;;;ACHpB,sHAAsH;AACtH,sCAAsC;AACtC,4BAA4B;AAC5B,6BAA6B;AAC7B,gBAAgB;AAChB,uBAAuB;AACvB,IAAI;AAEJ,IAAY,WAEX;AAFD,WAAY,WAAW;IACrB,6CAAI;IAAE,+CAAK;AACb,CAAC,EAFW,WAAW,GAAX,WAAW,KAAX,WAAW,QAEtB;AAMD;IAAA;IAqBA,CAAC;IAfQ,kCAAkB,GAAzB,UAA0B,IAAW,EAAE,MAA0B;QAC/D,IAAM,cAAc,GAAG,MAAa,CAAC;QACrC,EAAE,CAAC,CAAC,cAAc,CAAC,KAAK,KAAK,SAAS,CAAC,EAAC;YACtC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,4BAA4B,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAC,CAAC,CAAC;QAC3G,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IAKH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACzCD,sC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,sC","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport { PostgresModel } from './src/PostgresModel'\nexport {IScopeFactory} from './src/IScopeFactory'\nexport {IUser} from './src/IUser'\nexport {Scope, IKnexObject, ScopeAction} from './src/Scope'\nexport {Schemas} from './src/Schemas'\nexport {PublicScope} from './src/PublicScope'\n","import * as Knex from 'knex'\n\nimport * as Bookshelf from 'bookshelf'\n\nconst knexConfig = {\n  client: 'postgresql',\n  connection: process.env.POSTGRES_URL,\n  debug: process.env.KNEX_DEBUG === 'true',\n}\n\nexport const bookshelf = Bookshelf(Knex(knexConfig))\nbookshelf.plugin('pagination')\n\nimport { Collection, DestroyOptions, FetchAllOptions, Model, SaveOptions } from 'bookshelf'\n\nimport * as Pluralize from 'pluralize'\nimport { IScopeFactory } from './IScopeFactory'\nimport { IUser } from './IUser'\nimport { PublicScope } from \"./PublicScope\";\nimport { Scope, ScopeAction } from './Scope'\n\nexport interface IPostgresModelClass<T extends PostgresModel<T>> {\n  instanceName: string\n  pluralInstanceName: string\n  relationships: object\n  new (params?: any): T\n}\n\nexport interface IPaginationMetadata {\n  rowCount: number // Total number of rows found for the query before pagination\n  pageCount: number // Total number of pages of results\n  page: number // The requested page number\n  pageSze: number // The requested number of rows per page\n}\n\nexport interface IFetchPageOptions {\n  pageSize: number\n  page: number\n  withRelated?: Array<string>\n}\n\nexport interface IPaginatedCollection<T extends Model<any>> extends Collection<T> {\n  pagination: IPaginationMetadata\n}\n\nexport class PostgresModelScopeFactory {\n  public static scopeFactory: IScopeFactory\n}\n\nexport abstract class PostgresModel<T extends Model<T>> extends bookshelf.Model<T> {\n  // ==============================\n  //  Model Configuration\n  // ==============================\n\n  // note: tableName must be implemented as a getter fcn not a property on the concrete classes for eager loading to work\n  abstract get tableName(): string\n\n  abstract get columns(): object\n  get readOnlyColumns(): Array<string> {\n    return []\n  }\n\n  public defaultReadAclScope: Scope = new PublicScope()\n  public defaultWriteAclScope: Scope = new PublicScope()\n\n  static get instanceName(): string {\n    return this.name.charAt(0).toLowerCase() + this.name.slice(1)\n  }\n\n  static get pluralInstanceName(): string {\n    return Pluralize(this.instanceName)\n  }\n\n  get hasTimestamps(): boolean {\n    return true\n  }\n\n  // ==============================\n  //  Constructor\n  // ==============================\n  // ==============================\n  //  Relationships\n  // ==============================\n  // ==============================\n  //  Eager loading accessors\n  // ==============================\n  // ==============================\n  //  Column getter/setters\n  // ==============================\n\n  get createdAt(): Date {\n    return this.get('created_at')\n  }\n  get updatedAt(): Date {\n    return this.get('updated_at')\n  }\n  //\n  get readAcl(): string | null {\n    return this.get('readAcl')\n  }\n  set readAcl(value: string | null) {\n    this.set('readAcl', value)\n  }\n\n  get writeAcl(): string | null {\n    return this.get('writeAcl')\n  }\n  set writeAcl(value: string | null) {\n    this.set('writeAcl', value)\n  }\n  //\n  get deleted(): boolean {\n    return this.get('deleted') || false\n  }\n  set deleted(value: boolean) {\n    this.set('deleted', value)\n  }\n\n  // ==============================\n  //  Business Logic\n  // ==============================\n\n  public willBeUpdated(newParams: any): Promise<any> {\n    return Promise.resolve(newParams)\n  }\n\n  public updateWithParams(params: any, options?: SaveOptions): Promise<T> {\n    const restrictedKeys = ['id', 'readAcl', 'writeAcl'].concat(this.readOnlyColumns)\n    return this.willBeUpdated(params).then(updatedParams => {\n      Object.keys(updatedParams).forEach(key => {\n        if (Object.values(this.columns).indexOf(key) !== -1 && restrictedKeys.indexOf(key) === -1) {\n          this.set(key, updatedParams[key])\n        }\n      })\n      return this.save(options)\n    })\n  }\n\n  public updateWithParamsForUser(params: any, user: IUser, options?: SaveOptions): Promise<T> {\n    const restrictedKeys = ['id', 'readAcl', 'writeAcl'].concat(this.readOnlyColumns)\n    return this.willBeUpdated(params).then(updatedParams => {\n      Object.keys(updatedParams).forEach(key => {\n        if (Object.values(this.columns).indexOf(key) !== -1 && restrictedKeys.indexOf(key) === -1) {\n          this.set(key, updatedParams[key])\n        }\n      })\n      return this.saveForUser(user, options)\n    })\n  }\n\n  // ==============================\n  //  Access Control\n  // ==============================\n\n  public get readAclScope(): Scope {\n    if (this.readAcl) {\n      return PostgresModelScopeFactory.scopeFactory.scopeForAcl(this.readAcl, ScopeAction.Read)\n    } else {\n      return this.defaultReadAclScope\n    }\n  }\n\n  public get writeAclScope(): Scope {\n    if (this.writeAcl) {\n      return PostgresModelScopeFactory.scopeFactory.scopeForAcl(this.writeAcl, ScopeAction.Write)\n    } else {\n      return this.defaultWriteAclScope\n    }\n  }\n\n  // public save(attrs?: { [key: string]: any }, options?: SaveOptions): BlueBird<T>\n  // public save(key?: string, val?: any, options?: SaveOptions): BlueBird<T>\n  // public save() {\n  //   return BlueBird.reject({ code: 500, error: 'Must use saveForUser.' })\n  // }\n\n  public saveForUser(user: IUser, options?: SaveOptions): Promise<T> {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.id === undefined) {\n        // If no id, it must be a new object so we'll just let the save through\n        resolve(true)\n      } else {\n        this.writeAclScope.testAccess(user, this).then(resolve).catch(reject)\n        // AccessControl.verifyRequestHasPermissionToWriteObject(req,this).then(resolve).catch(reject);\n      }\n    }).then(allowed => {\n      if (allowed) {\n        // return Promise.resolve(this);\n        return super.save(undefined, options).then(result => {\n          return Promise.resolve(result)\n        })\n      } else {\n        // const companyIds = user !== undefined ? user.getVisibleCompanyIds() : [];\n        // console.log('Failed auth test for object: ' + JSON.stringify(this) + ' for user: ' + JSON.stringify(user) + ' with companies: ' + JSON.stringify(companyIds));\n        return Promise.reject({ code: 403, error: 'User not authorized for that action.' })\n        // return Promise.reject(new Error(''));\n      }\n    })\n  }\n\n  // public saveIgnoringWriteAcl(key?: string, val?: any, options?: SaveOptions): Promise<T> {\n  //   return Promise.resolve().then(() => {\n  //     return super.save(key, val, options)\n  //   })\n  // }\n\n  // public destroy(options?: DestroyOptions): BlueBird<T> {\n  //   return BlueBird.reject({ code: 500, error: 'Must use destroyForUser.' })\n  // }\n\n  public destroyForUser(user: IUser, options?: DestroyOptions): Promise<any> {\n    return (\n      this.writeAclScope\n        .testAccess(user, this)\n        // return AccessControl.verifyRequestHasPermissionToWriteObject(req,this)\n        .then(allowed => {\n          if (allowed) {\n            return super.destroy(options)\n          } else {\n            return Promise.reject({ code: 403, error: 'User not authorized for that action.' })\n          }\n        })\n    )\n  }\n\n  // public destroyIgnoringWriteAcl(options?: DestroyOptions): Promise<any> {\n  //   return Promise.resolve().then(() => {\n  //     return super.destroy(options)\n  //   })\n  // }\n  //\n  // public fetch(fetchOptions?: FetchOptions) {\n  //   return BlueBird.reject({ code: 500, error: new Error('Must use fetchForUser.') })\n  // }\n\n  public fetchForUser(user: IUser, fetchOptions?: any): Promise<T> {\n    let result: T\n    return Promise.resolve()\n      .then(() => {\n        return super.fetch(fetchOptions)\n      })\n      .then(r => {\n        result = r as any\n        if (result) {\n          return this.readAclScope.testAccess(user, result as any)\n        } else {\n          return Promise.resolve(true)\n        }\n        // return AccessControl.testObjectReadAuthorizationForRequest(result,req);\n      })\n      .then(authorized => {\n        if (authorized) {\n          return Promise.resolve(result)\n        } else {\n          console.log('Unauthorized for read access to object: ' + JSON.stringify(result))\n          console.log('')\n          console.log(' for user: ' + JSON.stringify(user))\n          return Promise.reject({ code: 403, error: 'Unauthorized.' })\n        }\n      })\n  }\n\n  // public fetchIgnoringReadAcl(fetchOptions?: any): Promise<T> {\n  //   return Promise.resolve().then(() => {\n  //     return super.fetch(fetchOptions)\n  //   })\n  // }\n\n  // public fetchAll(fetchOptions?: FetchAllOptions){\n  //   const unlock = fetchOptions ? (fetchOptions as any).unlock : null;\n  //   if (unlock){\n  //     return super.fetchAll(fetchOptions);\n  //   } else {\n  //     return BlueBird.reject({code: 500, error: new Error('Must use fetchAllForUser.')});\n  //   }\n  // }\n\n  public fetchAllForUser(user: IUser, fetchOptions?: FetchAllOptions): Promise<Collection<T>> {\n    return this.readAclScope.updateQueryReadAcl(user, this).then(() => {\n      return super.fetchAll(fetchOptions)\n    })\n  }\n\n  public fetchPageForUser(user: IUser, options?: IFetchPageOptions): Promise<IPaginatedCollection<T>> {\n    return this.readAclScope.updateQueryReadAcl(user, this).then(() => {\n      return (this as any).fetchPage(options)\n    })\n  }\n\n  // public fetchAllIgnoringReadAcl(fetchOptions?: FetchAllOptions): Promise<Collection<T>> {\n  //   return Promise.resolve().then(() => {\n  //     return super.fetchAll(fetchOptions)\n  //   })\n  // }\n\n  // ==============================\n  //  Lazy Loading\n  // ==============================\n\n  public lazyLoad(relationships: Array<string>): Promise<T> {\n    relationships = relationships || []\n    if (relationships.constructor !== Array) {\n      return Promise.reject({ code: 500, error: 'Must send an array of relationships.' })\n    } else {\n      return Promise.resolve().then(() => {\n        return this.load(relationships)\n      })\n      // return Promise.resolve()\n      // .then(() => {\n      //   return this.query(qb => {\n      //     qb.where('id', this.id);\n      //   }).fetch({withRelated: relationships});\n      // })\n      // .then(object => {\n      //   return Promise.resolve(object);\n      // });\n    }\n  }\n}\n","\nimport { IUser } from \"./IUser\";\nimport { IKnexObject, Scope } from \"./Scope\";\n\n\nexport class PublicScope extends Scope {\n\n  public aclString = 'public';\n\n  public testAccess(user: IUser, object: any) {\n    return Promise.resolve(true);\n  }\n\n\n  public updateKnexQuery(user: IUser, object: IKnexObject): Promise<any> {\n    return Promise.resolve();\n  }\n\n}\n","import * as Knex from 'knex'\n\nexport enum PostgresDataType {\n  Single = 'real',\n  Double = 'double precision',\n}\n\nexport class Schemas {\n  private static autoUpdateSQL = \"CREATE OR REPLACE FUNCTION update_updated_at_column()\\n RETURNS TRIGGER AS $$ \\nBEGIN \\n   IF row(NEW.*) IS DISTINCT FROM row(OLD.*) THEN\\n      NEW.updated_at = now();\\n      RETURN NEW;\\n   ELSE\\n      RETURN OLD;\\n   END IF;\\nEND;\\n$$ language 'plpgsql';\"\n  private static dropFunction = 'DROP FUNCTION update_updated_at_column();'\n\n  public static createAutoUpdatedAtTimestampTrigger(knex: Knex) {\n    return knex.raw(this.autoUpdateSQL)\n  }\n\n  public static dropAutoUpdatedAtTimestampTrigger(knex: Knex) {\n    return knex.raw(this.dropFunction)\n  }\n\n  public static addAutoUpdatedAtTimestampTriggerForTable(knex: Knex, tableName: string) {\n    return knex.raw(\n      'CREATE TRIGGER update_' +\n        tableName +\n        '_updated_at BEFORE UPDATE ON ' +\n        tableName +\n        ' FOR EACH ROW EXECUTE PROCEDURE update_updated_at_column();'\n    )\n  }\n\n  public static changeColumnType(knex: Knex, table: string, column: string, newType: PostgresDataType) {\n    return knex.raw('ALTER TABLE \"' + table + '\" ALTER COLUMN \"' + column + '\" TYPE ' + newType + '')\n  }\n\n  public static dropTableCascade(knex: Knex, tableName: string) {\n    return knex.raw('DROP TABLE ' + tableName + ' CASCADE')\n  }\n\n  // public static alterConstraint(knex: Knex, table: string, constraintName: string) {\n  //\n  //   const sql = 'begin;\\n' +\n  //     '\\n' +\n  //     'alter table ' + table + '\\n' +\n  //     'drop constraint ' + constraintName + ';\\n' +\n  //     '\\n' +\n  //     'alter table ' + table + '\\n' +\n  //     'add constraint ' + constraintName + '\\n' +\n  //     'foreign key (customer_id)\\n' +\n  //     'references customers (id)\\n' +\n  //     'on delete cascade;\\n' +\n  //     '\\n' +\n  //     'commit;'\n  //\n  // }\n\n  public static createStandardTable(knex: Knex, tableName: string, builder: (t: Knex.TableBuilder) => void) {\n    return knex.schema.createTable(tableName, t => {\n      t.increments('id').primary()\n      t.timestamps(false, true)\n\n      t.boolean('deleted').notNullable().defaultTo(false)\n\n      builder(t)\n    })\n  }\n}\n","\nimport { IUser } from \"./IUser\";\nimport { PostgresModel } from \"./PostgresModel\";\n\n// TODO: Refactor this interface to allow each concrete class to provide their own assumptions about keys on the model\n// export interface IScopeableObject {\n//   readAcl: string | null;\n//   writeAcl: string | null;\n//   id: number;\n//   tableName: string;\n// }\n\nexport enum ScopeAction {\n  Read, Write\n}\n\nexport interface IKnexObject {\n  _knex: any;\n}\n\nexport abstract class Scope {\n\n  public abstract get aclString(): string;\n\n  public abstract testAccess(user: IUser, object: any): Promise<boolean>;\n\n  public updateQueryReadAcl(user: IUser, object: PostgresModel<any>) {\n    const knexableObject = object as any;\n    if (knexableObject._knex === undefined){\n      return Promise.reject({code: 500, error: 'No _knex found on object: ' + JSON.stringify(knexableObject)});\n    }\n    if (user && user.isAdmin()) {\n      return Promise.resolve();\n    } else {\n      return this.updateKnexQuery(user, knexableObject);\n    }\n  }\n\n\n  protected abstract updateKnexQuery(user: IUser, object: IKnexObject): Promise<any>;\n\n}\n","module.exports = require(\"bookshelf\");","module.exports = require(\"knex\");","module.exports = require(\"pluralize\");"],"sourceRoot":""}